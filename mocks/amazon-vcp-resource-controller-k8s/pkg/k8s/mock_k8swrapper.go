// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aws/amazon-vpc-resource-controller-k8s/pkg/k8s (interfaces: K8sWrapper)

// Package mock_k8s is a generated GoMock package.
package mock_k8s

import (
	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/api/core/v1"
	reflect "reflect"
)

// MockK8sWrapper is a mock of K8sWrapper interface
type MockK8sWrapper struct {
	ctrl     *gomock.Controller
	recorder *MockK8sWrapperMockRecorder
}

// MockK8sWrapperMockRecorder is the mock recorder for MockK8sWrapper
type MockK8sWrapperMockRecorder struct {
	mock *MockK8sWrapper
}

// NewMockK8sWrapper creates a new mock instance
func NewMockK8sWrapper(ctrl *gomock.Controller) *MockK8sWrapper {
	mock := &MockK8sWrapper{ctrl: ctrl}
	mock.recorder = &MockK8sWrapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockK8sWrapper) EXPECT() *MockK8sWrapperMockRecorder {
	return m.recorder
}

// AdvertiseCapacity mocks base method
func (m *MockK8sWrapper) AdvertiseCapacity(arg0, arg1 string, arg2 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AdvertiseCapacity", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// AdvertiseCapacity indicates an expected call of AdvertiseCapacity
func (mr *MockK8sWrapperMockRecorder) AdvertiseCapacity(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AdvertiseCapacity", reflect.TypeOf((*MockK8sWrapper)(nil).AdvertiseCapacity), arg0, arg1, arg2)
}

// AnnotatePod mocks base method
func (m *MockK8sWrapper) AnnotatePod(arg0 *v1.Pod, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AnnotatePod", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// AnnotatePod indicates an expected call of AnnotatePod
func (mr *MockK8sWrapperMockRecorder) AnnotatePod(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AnnotatePod", reflect.TypeOf((*MockK8sWrapper)(nil).AnnotatePod), arg0, arg1, arg2)
}

// GetPod mocks base method
func (m *MockK8sWrapper) GetPod(arg0, arg1 string) (*v1.Pod, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPod", arg0, arg1)
	ret0, _ := ret[0].(*v1.Pod)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPod indicates an expected call of GetPod
func (mr *MockK8sWrapperMockRecorder) GetPod(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPod", reflect.TypeOf((*MockK8sWrapper)(nil).GetPod), arg0, arg1)
}
